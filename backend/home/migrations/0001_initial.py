# Generated by Django 3.2.8 on 2021-10-20 21:26

from django.db import migrations, models
import django.db.models.deletion
import streams.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks
import wagtailstreamforms.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('streams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='streams.genericpage')),
                ('content', wagtail.core.fields.StreamField([('hero', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.TextBlock()), ('sub_title', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('button_text', wagtail.core.blocks.TextBlock(required=False)), ('button_link', wagtail.core.blocks.URLBlock(required=False)), ('video_text', wagtail.core.blocks.TextBlock(required=False)), ('video_link', wagtail.core.blocks.URLBlock(required=False))])), ('divider', wagtail.core.blocks.StructBlock([('description', wagtail.core.blocks.RichTextBlock(help_text='Any description you want for the divider', required=False)), ('logos', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(required=False), blank=True, help_text='Any logos you might want to display on the divider'))])), ('form', wagtail.core.blocks.StructBlock([('form', wagtailstreamforms.blocks.FormChooserBlock()), ('form_action', wagtail.core.blocks.CharBlock(help_text='The form post action. "" or "." for the current page or a url', required=False)), ('form_reference', wagtailstreamforms.blocks.InfoBlock(help_text='This form will be given a unique reference once saved', required=False))])), ('hotel_list', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.TextBlock()), ('description', wagtail.core.blocks.TextBlock(required=False)), ('hotels', wagtail.core.blocks.ListBlock(streams.blocks.HotelBlock))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('streams.genericpage',),
        ),
        migrations.CreateModel(
            name='HotelPage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='streams.genericpage')),
                ('content', wagtail.core.fields.StreamField([('hero', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.TextBlock()), ('sub_title', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('button_text', wagtail.core.blocks.TextBlock(required=False)), ('button_link', wagtail.core.blocks.URLBlock(required=False)), ('video_text', wagtail.core.blocks.TextBlock(required=False)), ('video_link', wagtail.core.blocks.URLBlock(required=False))])), ('divider', wagtail.core.blocks.StructBlock([('description', wagtail.core.blocks.RichTextBlock(help_text='Any description you want for the divider', required=False)), ('logos', wagtail.core.blocks.ListBlock(wagtail.images.blocks.ImageChooserBlock(required=False), blank=True, help_text='Any logos you might want to display on the divider'))])), ('form', wagtail.core.blocks.StructBlock([('form', wagtailstreamforms.blocks.FormChooserBlock()), ('form_action', wagtail.core.blocks.CharBlock(help_text='The form post action. "" or "." for the current page or a url', required=False)), ('form_reference', wagtailstreamforms.blocks.InfoBlock(help_text='This form will be given a unique reference once saved', required=False))])), ('room_list', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.TextBlock()), ('description', wagtail.core.blocks.TextBlock(required=False)), ('rooms', wagtail.core.blocks.ListBlock(streams.blocks.RoomBlock))]))], blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('streams.genericpage',),
        ),
        migrations.CreateModel(
            name='RoomPage',
            fields=[
                ('genericpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='streams.genericpage')),
            ],
            options={
                'abstract': False,
            },
            bases=('streams.genericpage',),
        ),
    ]
